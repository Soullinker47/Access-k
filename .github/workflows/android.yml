name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      # 更稳的网络与 Gradle 行为
      GRADLE_OPTS: >-
        -Djava.net.preferIPv4Stack=true
        -Dorg.gradle.internal.http.connectionTimeout=60000
        -Dorg.gradle.internal.http.socketTimeout=180000
        -Dorg.gradle.jvmargs=-Xmx3g -Dfile.encoding=UTF-8

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # 直接用安装版 Gradle 8.9 编译（不依赖仓库 wrapper，少踩坑）
      - name: Use Gradle 8.9
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.9

      - name: Build Debug APK (retry x3)
        uses: nick-fields/retry@v3
        with:
          max_attempts: 3
          timeout_minutes: 20
          command: |
            gradle --version
            gradle clean :app:assembleDebug --stacktrace --no-daemon --warning-mode all

      # 列目录，方便你在日志里确认产物路径
      - name: List build outputs
        run: |
          echo "== APKs =="
          find "$GITHUB_WORKSPACE" -type f -name "*.apk" -print || true
          echo "== AABs =="
          find "$GITHUB_WORKSPACE" -type f -name "*.aab" -print || true
          echo "== app/build/outputs =="
          ls -R app/build/outputs || true

      # 1) 上传到 Artifacts（Web 界面“Artifacts”里能下载；找不到就报错）
      - name: Upload build artifacts (APK/AAB)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/build/outputs/apk/**/*.apk
            **/build/outputs/bundle/**/*.aab
          if-no-files-found: error
          compression-level: 6
          retention-days: 7

      # 2) 顺带发一个预发布，把 APK 也挂在 Releases 页面，手机端更好找
      - name: Publish GitHub Release with APK
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: build-${{ github.run_id }}
          name: "CI build #${{ github.run_number }}"
          prerelease: true
          files: |
            app/build/outputs/apk/debug/app-debug.apk
            app/build/outputs/bundle/**/**/*.aab
